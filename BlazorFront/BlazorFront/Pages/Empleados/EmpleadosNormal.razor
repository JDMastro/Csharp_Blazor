@page "/empleadosnormal"

@inject NavigationManager navigation

<div class="p-3">
    <div class="row">
        <div class="col-md-6">
            <h3>dasdasdasdasd</h3>
        </div>
        <div class="col-md-6 text-right">
            <a href="/empleados/normal/form">Crear Empleado</a>
        </div>
    </div>

    <table class="table m-2">
        <thead>
            <tr>
                <td>Id</td>
                <td>Nombres</td>
                <td>Apellidos</td>
                <td>Direccion</td>
                <td>Teléfono</td>
                <td>Salario</td>
                <td>Area</td>
                <td>Fecha de ingreso</td>
                <td>Sexo</td>
                <td>Empresa</td>
                <td>Acciones</td>
            </tr>
        </thead>

        @if (oRespuesta.Exito > 0)
        {
            <tbody>
                @foreach (var item in (List<Trabajadores>)oRespuesta.Data)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Nombres</td>
                        <td>@item.Apellidos</td>
                        <td>@item.Direccion</td>
                        <td>@item.Telefono</td>
                        <td>@item.Salario</td>
                        <td>@item.AreasId</td>
                        <td>@item.FechaIngreso</td>
                        <td>@item.Sexo</td>
                        <td>@item.EmpresasId</td>
                        <td>
                            <a href="/empleados/normal/form/@item.Id">Editar</a>
                            <a @onclick="()=> DeleteEmpleado(item.Id)"><span class="oi oi-delete"></span></a>
                        </td>
                    </tr>
                }

            </tbody>
        }
        else
        {
            <div class="spinner-border"></div>
        }
    </table>





</div>


@code {
    public Respuesta<List<Trabajadores>> oRespuesta = new Respuesta<List<Trabajadores>>();
    [Inject]
    public ITrabajadores trabajadoresRepo { get; set; }

    @inject IJSRuntime JsRuntime

    protected override async Task OnInitializedAsync()
    {
        await getEmpleados();
    }

    private async Task getEmpleados()
    {
        oRespuesta = await trabajadoresRepo.GetAll("Trabajadores/empleados");
    }

    private async Task DeleteEmpleado(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            // Delete!
            await trabajadoresRepo.Delete("Trabajadores/empleados/", id);
            await getEmpleados();
            navigation.NavigateTo("/empleadosnormal");
        }
    }
}
