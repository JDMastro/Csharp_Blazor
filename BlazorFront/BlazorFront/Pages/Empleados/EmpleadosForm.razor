@page "/empleados/form"
@page "/empleados/form/{Id:int}"
@inject NavigationManager navigation

<h3>EmpleadosForm</h3>


<EditForm Model="@trabajadores">
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12 col-md-6">

                <div class="form-group">
                    <InputText class="form-control" @bind-Value="@trabajadores.Nombres" placeholder="Nombres"></InputText>
                </div>

                <div class="form-group">
                    <InputText class="form-control" @bind-Value="@trabajadores.Apellidos" placeholder="Apellido"></InputText>
                </div>

                <div class="form-group">
                    <InputText class="form-control" @bind-Value="@trabajadores.Direccion" placeholder="Direccion"></InputText>
                </div>

                <div class="form-group">
                    <InputText class="form-control" @bind-Value="@trabajadores.Telefono" placeholder="Telefono"></InputText>
                </div>

               

            </div>

            <div class="col-sm-12 col-md-6">


                <div class="form-group">

                    @if (ListAreasRespuesta.Exito > 0)
                    {
                        <InputSelect id="area" class="form-control" @bind-Value="@trabajadores.AreasId" placeholder="Area">
                            @foreach (var item in (List<Areas>)ListAreasRespuesta.Data)
                                {
                                <option value="@item.Id">@item.Descripcion</option>
                                }
                        </InputSelect>
                    }

                </div>


                <div class="form-group">
                    <InputDate class="form-control" @bind-Value="@trabajadores.FechaIngreso"></InputDate>
                </div>

                <div class="form-group">
                    <InputSelect id="area" class="form-control" @bind-Value="@trabajadores.Sexo" placeholder="Area">
                        <option value="Masculino">Masculino</option>
                        <option value="Femenino">Femenino</option>
                    </InputSelect>
                </div>

                <div class="form-group">

                    @if (ListAreasRespuesta.Exito > 0)
                    {
                        <InputSelect id="area" class="form-control" @bind-Value="@trabajadores.EmpresasId" placeholder="Area">
                            @foreach (var item in (List<Empresas>)ListEmpresasRespuesta.Data)
                                {
                                <option value="@item.Id">@item.Descripcion</option>
                                }
                        </InputSelect>
                    }

                </div>










            </div>


        </div>

    </div>
</EditForm>



@code {
    [Parameter]
    public int Id { get; set; }
    [Inject]
    public IAreas areasRepo { get; set; }

    [Inject]
    public IEmpresas empresasRepo { get; set; }

    public Respuesta<List<Areas>> ListAreasRespuesta = new Respuesta<List<Areas>>();
    public Respuesta<List<Empresas>> ListEmpresasRespuesta = new Respuesta<List<Empresas>>();

    Trabajadores trabajadores = new Trabajadores();
    Areas areas = new Areas();

    protected override async Task OnInitializedAsync()
    {
        await getAreasAndEmpresas();


        trabajadores.AreasId = ListAreasRespuesta.Data.FirstOrDefault().Id;
        trabajadores.Sexo = "Masculino";
        trabajadores.EmpresasId = ListEmpresasRespuesta.Data.FirstOrDefault().Id;
        //return base.OnInitializedAsync();
    }

    private async Task getAreasAndEmpresas()
    {
        ListAreasRespuesta = await areasRepo.GetAll("areas/jefes");
        ListEmpresasRespuesta = await empresasRepo.GetAll("empresas");
    }
}
