@page "/areas/form"
@page "/areas/form/{Id:int}"
@inject NavigationManager navigation
<h3>AreaForm</h3>

<EditForm Model="@area" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-10">
                <div class="form-group">
                    <label asp-for="Descripcion" class="control-label"></label>
                    <InputText class="form-control" @bind-Value="@area.Descripcion"></InputText>
                    <ValidationMessage For="@(()=> area.Descripcion )" />
                </div>



                <div class="form-group">
                    <button type="submit">Guardar</button>
                </div>

            </div>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    Areas area = new Areas();
    [Inject]
    public IAreas areasRepo { get; set; }

    public Respuesta<Areas> oRespuesta = new Respuesta<Areas>();

    private async Task Guardar()
    {
            if(Id != 0) {
                var response = await areasRepo.Update("areas/", area, Id);
                oRespuesta = response;
                navigation.NavigateTo("/areas");

            } else {
                var response = await areasRepo.Store("areas", area);
                oRespuesta = response;
                navigation.NavigateTo("/areas");
            }
    }

    protected override async Task OnInitializedAsync()
    {
        if(Id != 0)
        {
            oRespuesta = await areasRepo.Get("areas/", Id);
            area = oRespuesta.Data;
        }
    }
}
